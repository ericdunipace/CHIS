name: Run R Code with renv and testthat

on:
  push:
  pull_request:
    branches: [main, master, dac]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain:
          - {compiler: gcc, version: 13}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RENV_CONFIG_REPOS_OVERRIDE: https://packagemanager.posit.co/cran/latest
      RENV_CONFIG_INSTALL_STAGED: false
      RENV_CONFIG_CACHE_SYMLINKS: FALSE
      RENV_ROBOCOPY_SAFETY: false
      RENV_CONFIG_VERBOSE: TRUE
      RENV_CONFIG_PACKAGE_TYPE: binary

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.2.3'  # version on DAC website
        
    - name: Install CRAN gfortran runtime (macOS)
      if: runner.os == 'macOS'
      run: |
        curl -LO https://mac.r-project.org/tools/gfortran-12.2-ventura-arm64.tar.xz
        sudo tar -xJf gfortran-12.2-ventura-arm64.tar.xz -C /

    - name: Install system dependencies (mac)
      if: runner.os == 'macOS'
      run: |
        brew install --cask xquartz
        brew install gettext
        brew install udunits
        brew install gcc
        echo "CPPFLAGS=-I$(brew --prefix gettext)/include" >> $GITHUB_ENV
        echo "LDFLAGS=-L$(brew --prefix gettext)/lib" >> $GITHUB_ENV
        echo "FC=$(brew --prefix gcc)/bin/gfortran" >> $GITHUB_ENV
        echo "CC=$(brew --prefix gcc)/bin/gcc" >> $GITHUB_ENV
        echo "CXX=$(brew --prefix gcc)/bin/g++" >> $GITHUB_ENV
        echo "F77=$(brew --prefix gcc)/bin/gfortran" >> $GITHUB_ENV
        echo "LDFLAGS=-L/opt/homebrew/opt/gcc/lib/gcc/current" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=/opt/homebrew/opt/gcc/lib/gcc/current" >> $GITHUB_ENV
      
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcurl4-openssl-dev libssl-dev libxml2-dev \
          libharfbuzz-dev libfribidi-dev libfreetype6-dev \
          libpng-dev libtiff5-dev libjpeg-dev \
          libudunits2-dev libgdal-dev gdal-bin \
          libgeos-dev libproj-dev libgettextpo-dev gettext \
          gfortran
          
    - name: Install gfortran (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install -y mingw
        echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
    # Verify installation
    - name: Show gfortran version
      run: |
        gfortran --version
      shell: bash

    - name: Install renv and restore environment
      shell: Rscript {0}
      run: |
        install.packages("renv", repos = "https://packagemanager.posit.co/cran/latest")
        options(repos = c(REPO = "https://packagemanager.posit.co/cran/latest"))
        tryCatch({
          renv::restore(prompt = FALSE)
        }, error = function(e) {
          message("RENV RESTORE ERROR: ", conditionMessage(e))
          renv::status()
          quit(status = 1)
        })

    - name: Run testthat tests
      run: |
        Rscript -e 'install.packages("testthat", repos = "https://cloud.r-project.org")'
        Rscript tests/testthat.R
