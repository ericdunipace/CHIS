name: Run R Code with renv and testthat

on:
  push:
  pull_request:
    branches: [main, master, dac]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain:
          - {compiler: gcc, version: 13}
          - {compiler: intel, version: '2025.0'}
          - {compiler: intel-classic, version: '2021.10'}
          - {compiler: nvidia-hpc, version: '25.1'}
          - {compiler: lfortran, version: '0.45.0'}
        include:
          - os: ubuntu-latest
            toolchain: {compiler: gcc, version: 12}
        exclude:
          - os: macos-latest
            toolchain: {compiler: intel, version: '2023.2'}
          - os: macos-latest
            toolchain: {compiler: nvidia-hpc, version: '23.11'}
          - os: windows-latest
            toolchain: {compiler: nvidia-hpc, version: '23.11'}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RENV_CONFIG_REPOS_OVERRIDE: https://packagemanager.posit.co/cran/latest
      RENV_CONFIG_INSTALL_STAGED: false
      RENV_CONFIG_CACHE_SYMLINKS: FALSE
      RENV_ROBOCOPY_SAFETY: false
      RENV_CONFIG_VERBOSE: TRUE
      RENV_CONFIG_PACKAGE_TYPE: binary
      FC: gfortran
      GCC_V: 12

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.2.3'  # version on DAC website
        
    - name: Checkout fortran
      uses: fortran-lang/setup-fortran@v1
      id: setup-fortran
      with:
        compiler: ${{ matrix.toolchain.compiler }}
        version: ${{ matrix.toolchain.version }}

    - run: |
        ${{ env.FC }} ... # environment vars FC, CC, and CXX are set
        ${{ steps.setup-fortran.outputs.fc }} ... # outputs work too

    - name: Install system dependencies (mac)
      if: runner.os == 'macOS'
      run: |
        brew install --cask xquartz
        brew install gettext
        brew install udunits
        echo "CPPFLAGS=-I$(brew --prefix gettext)/include" >> $GITHUB_ENV
        echo "LDFLAGS=-L$(brew --prefix gettext)/lib" >> $GITHUB_ENV
        sudo ln -fs /opt/homebrew/bin/gfortran-${GCC_V} /usr/local/bin/gfortran
        sudo mkdir -p /usr/local/gfortran
        sudo ln -sf /opt/homebrew/Cellar/gcc@${GCC_V}/*/lib/gcc/${GCC_V} /usr/local/gfortran/lib
      
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcurl4-openssl-dev libssl-dev libxml2-dev \
          libharfbuzz-dev libfribidi-dev libfreetype6-dev \
          libpng-dev libtiff5-dev libjpeg-dev \
          libudunits2-dev libgdal-dev gdal-bin \
          libgeos-dev libproj-dev libgettextpo-dev gettext

    - name: Install renv and restore environment
      shell: Rscript {0}
      run: |
        install.packages("renv", repos = "https://packagemanager.posit.co/cran/latest")
        options(repos = c(REPO = "https://packagemanager.posit.co/cran/latest"))
        tryCatch({
          renv::restore(prompt = FALSE)
        }, error = function(e) {
          message("RENV RESTORE ERROR: ", conditionMessage(e))
          renv::status()
          quit(status = 1)
        })

    - name: Run testthat tests
      run: |
        Rscript -e 'install.packages("testthat", repos = "https://cloud.r-project.org")'
        Rscript tests/testthat.R
